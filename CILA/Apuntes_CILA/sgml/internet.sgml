<!-- -------------------------------------------------------------------- -->
<!-- $Id$ -->
<!-- -------------------------------------------------------------------- -->

  <sect>Usando Internet con GNU/Linux

    <sect1>Navegadores web

      <sect2>Netscape Communicator 4 
      
<p>
        <quote>
	  Durante algunos años, Netscape ha sido el único navegador
	  multiplataforma real, dando cobertura a muchos de los
	  distintos Unix comerciales existentes.
	  Casi desde que Linux tiene interfaz gráfico, ha existido una
	  versión del navegador Netscape para este sistema operativo.
	</quote>

	<quote>
	  <em>Netscape Communicator 4</em> proporciona soporte para
	  navegación de páginas web con JavaScript y Flash 5, 
	  permite visualizar documentos PDF dentro del navegador 
	  (mediante un plugin para el <em>Adobe Acrobat Reader</em>).
	  También nos permite gestionar el correo electrónico y
	  componer páginas web.
	</quote>

	<quote>
	  Los Linuxeros siempre hemos considerado que el navegador
	  Netscape consumía demasiados recursos en Linux, además de
	  tener bastantes problemas de estabilidad.
	  Debido a este, y a otros factores importantes, como fueron la
	  forma de competir con las casa MicroSoft, Netscape llegó a la
	  sana conclusión de que la mejor manera de mantener su
	  navegador en el mercado, era liberando su código fuente. Así
	  nació <bf>Mozilla</bf>
	</quote>

	<quote>
	  Como debe ser, dentro de la comunidad del Software Libre, se
	  alzaron voces en contra de ese desperdicio de recursos,
	  proponiendo la creación de navegadores alternativos.
	  Aquí listamos algunas de las alternativas que podemos encontrar
	  en el área de los navegadores web dentro del Software Libre:
	  <itemize>
	    <item><bf>chimera2</bf> - Navegador web para las X
	    <item><bf>communicator</bf> - Netscape Communicator 4.77
	    <item><bf>dillo</bf> - Navegador web basado en las GTK
	    <item><bf>encompass</bf> - Un navegador libre para GNOME
            <item><bf>galeon</bf> - Navegador basado en Mozilla, con el aspecto y la apariencia de las aplicaciones GNOME
            <item><bf>konqueror</bf> - El gestor de ficheros, navegador web y visor de documentos del KDE
	    <item><bf>links</bf> - Navegador web en modo caracter
	    <item><bf>lynx</bf> - Navegador web en modo caracter
            <item><bf>mozilla</bf> - Un navegador Open Source para las X's. Es el heredero de Netscape.
            <item><bf>OpenOffice</bf> - Suite ofimática que incluye un buen navegador web
            <item><bf>w3m</bf> - Visor web con un excelente soporte para tablas y marcos
	  </itemize>
	  Bueno, seguro que en el momento de leer este apartado, habrán
	  surgido nuevos navegadores web dentro del mundillo del
	  Software Libre
	</quote>
	
      </sect2>

    </sect1>

    <sect1>Transferencia de ficheros (FTP)

<p>
<quote> FTP  (File Transfer Protocol)  es un protocolo que  se utiliza
para transferir  información, almacenada  en ficheros, de  una máquina
remota a otra  local, o viceversa. Para poder  realizar esta operación
es necesario conocer la <em/dirección IP/ (o el &quot;nombre&quot;) de
la máquina a la que nos  queremos conectar para realizar algún tipo de
transferencia. Es fundamental distinguir entre máquina local y máquina
remota:</quote>

<descrip>

<tag/Máquina local/ Es  aquella desde donde nos  conectamos para hacer
la taransferencia, es decir, donde ejecutamos ftp.

<tag/Máquina  remota/  Es  aquella  a   la  que  nos  conectamos  para
transferir información.

</descrip>

<sect2> Inicio de sesión FTP

<p>
<quote>  Para realzar  transferencias  de ficheros  por protocolo  FTP
se  establecen  conexiones (sesiones)  entre  la  máquina local  y  la
remota. Estas sesiones comienzan por  la autentificación del usuario y
prosiguen  con las  transferencias.  Finalmente la  sesión se  cierra.
Veamos un breve ejemplo. </quote>

<code>
$ ftp euler
Connected to euler.fmat.ull.es.
220 ProFTPD 1.2.0pre10 Server (Debian) [euler.fmat.ull.es]
Name (euler:miguev): 
</code>

<quote>  El   servidor  nos  preguntará   un  nombre  de   usuario,  y
seguidamente la contraseña. El nombre  que daremos debe ser una cuenta
de  usuario válida  en el  servidor al  que intentamos  acceder, y  la
contraseña  lógicamente debe  ser  la de  ese  usuario. En  servidores
públicos suele existir una cuenta de  acceso anónima sólo para leer (o
tal vez una carpeta donde poner cosas pero no leer). Para acceder a un
FTP  como usuario  anónimo se  utiliza el  nombre <em/anonymous/  y se
proporciona  la  dirección  de  correo  electrónico  como  contraseña.
</quote>

<quote> Una vez introducido el nombre  y la contraseña el servidor nos
recibirá  y  el  programa  cliente  de FTP  nos  mostrará  un  prompt,
manifestando así que  está preparado para ejecutar las  órdenes que le
demos. A  partir de aquí  se realizan las maniobras  posibles mediante
los comándos de FTP que veremos más adelante. </quote>

<code>
$ ftp euler
Connected to euler.fmat.ull.es.
220 ProFTPD 1.2.0pre10 Server (Debian) [euler.fmat.ull.es]
Name (euler:miguev): miguev
331 Password required for miguev.
Password:
230 User miguev logged in.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt;
</code>

</sect2>

<sect2> Comandos del FTP

<p>
<quote>
El protocolo FTP dispone de unos comandos estándares suficientes 
para las operaciones de transferencia de ficheros, de los cuales
vemos a continuación un resumen.
</quote>

<descrip>

<tag/help/ Proporciona una lista de los comandos del FTP de la máquina
local

<tag/help   comando/   Proporciona   información  sobre   el   comando
especificado, correspondeinte a la máquina local

<tag/lcd directorio-local/ Para moverse de  un directorio a otro en la
máquina local

<tag/lcd unidad:/  Para cambiar de una  unidad de disco a  otra, en el
caso particular de que la máquina local esa un PC con Windows o MS-DOS

<tag/cd directorio-remoto/ Para moverse de un directorio a otro en la máquina remota

<tag/lls directorio-local/  Para listar el contenido  de un directorio
en la máquina local

<tag/[ls|dir] directorio-remoto/
Para listar el contenido de un directorio en la máquina remota

<tag/! comando/ Para ejecutar un comando en la máquina local

<tag/delete fichero-remoto/ Para borrar un fichero en la máquina remota

<tag/delete  ficheros-remotos/  Para  borrar  varios  ficheros  en  la
máquina remota

<tag/rmdir directorio-remoto/ Para borrar  un directorio en la máquina
remota

<tag/mkdir directorio-remoto/  Para crear un directorio  en la máquina
remota

<tag/pwd/ Para  saber el directorio en  el que se está,  en la máquina
remota

<tag/ascii/ Para hacer la transferencia  en formato ascii (lo hace por
defecto)

<tag/binary/  Para  hacer  la  transferencia en  formato  binario,  se
utiliza el comando:

<tag/get      fichero-remoto     fichero-local/      Transfiere     el
<tt/fichero-remoto/  desde  la  máquina  remota a  la  máquina  local,
guardándolo con el nombre <tt/fichero-local/ en la máquina local

<tag/mget lista-ficheros-remotos/ Transfiere los ficheros listados desde
la máquina remota a la máquina local.

<tag/prompt/ (Des)activa el modo  interactivo de las transferencias de
ficheros múltiples.

<tag/put      fichero-local     fichero-remoto/      Transfiere     el
<tt/fichero-local/  desde  la  máquina  local  a  la  máquina  remota,
guardándolo con el nombre <tt/fichero-remoto/ en la máquina remota

<tag/mput  lista-ficheros-locales/  Transfiere los  ficheros  listados
desde la máquina local a la máquina remota.

</descrip>

<quote> Obvimante, el comando <tt/ftp/ no es el único programa cliente
de  FTP disponible.  Existen multitud  de programas  clientes de  FTP,
tanto para GNU/Linux como para  otras plataformas, como p.ej. el gFTP.
</quote>

    </sect1>

    <sect1>Acceso remoto (SSH)
<p>

    <quote>  En muchas  ocaciones  resulta interesante  acceder a  una
    máquina  remota  y  trabajar   sobre  ella  como  si  estubieramos
    físicamente frente a su consola. Es decir, poder ejecutar comandos
    en dicha  máquina sin tener  que trasladarnos a escribirlos  en su
    teclado.  Este tipo  de  acceso  entraña sus  riesgo  dado que  es
    necesaria la autentificación del usuario pero este no puede enviar
    sin  más su  contraseña  por la  red pues  pondría  en peligro  la
    seguridad  del sistema.  Además puede  resultar peligroso  que los
    comandos que enviemos,  así como la salida por  pantalla de dichos
    comandos, viajen por la red desprotegidos.</quote>

    <quote> Secure  Shell (SSH) es  un programa que  resuelve nuestros
    problemas puesto que encripta tanto  la información que es enviada
    a la máquina  remota, como la que es envía  por esta. El resultado
    es que  aunque la  comunicación pueda  ser interceptada  los datos
    resultarán ininteligibles.</quote>

    <quote>  La forma  más sencilla  de utilización  es la  siguiente:
    </quote>

      <code> $ ssh &lt;usuario&gt;@&lt;máquina_remota&gt; </code>

    <quote> Por  ejemplo si el  usuario <tt/miguev/ quiere  acceder al
    servidor <tt/euler.fmat.ull.es/ ejecutaría lo siguiente: </quote>

      <code> $ ssh miguev@euler.fmat.ull.es </code>

    <quote> La primera vez que accedamos a una máquina el programa nos
    mostrará la <em/huella dactilar/ de dicha máquina y nos preguntará
    si estamos seguros de que es a ella a quien queremos acceder. Esto
    permite utilizar políticas de seguridad que eviten que una máquina
    suplante a otra y nos engañe. Si estamos seguros y contestamos que
    sí, el sistema nos pedirá la password de acceso, de la misma forma
    que lo hará todas la veces que queramos acceder a ella. En caso de
    ser  autentificados dispondremos  del  tan  ansiado acceso  remoto
    sobre el citado sistema.</quote>

    <quote> En caso de no especificar el nombre de usuario
    (<tt/ssh euler.fmat.ull.es/) el programa utilizará nuestro
    nombre en la máquina desde la que lo estamos ejecutando.
    </quote>

    <quote> Debido a que el caracter <tt/~/ tiene un significado
    especial para el <tt/ssh/, si queremos escribirlo en la máquina
    remota tendremos que pulsar <tt/~~/ en nuestro teclado.</quote>

    <quote> Aunque <tt/ssh/ garantiza el acceso remoto seguro
    no proporciona por si sólo la transferencia segura de archivos.
    Para ello se utiliza el comando <tt/scp/ que tiene la siguiente forma:
    </quote>

      <code>
      $ scp &lt;usuario&gt;@&lt;máquina_origen&gt;:&lt;archivo_origen&gt;
            &lt;usuario&gt;@&lt;máquina_destino&gt;:&lt;archivo_destino&gt;
      </code>

    <quote> El cual copia <tt/archivo_origen/ desde la <tt/máquina_origen/
    hasta el <tt/archivo_destino/ en la <tt/máquina_destino/. Si no se
    especifica alguno de los nombres de máquina, el <tt/scp/ asume que
    estamos hablando del sistema local. El siguiente comando copia
    el archivo <tt/miarchivo/ desde la máquina local hasta
    <tt/euler.fmat.ull.es/:</quote>

      <code>
      $ scp miarchivo euler.fmat.ull.es:
      </code>

    <quote> Mientras que el siguiente comando hace lo contrario:</quote>
      
      <code>
      $ scp euler.fmat.ull.es:miarchivo .
      </code>

    </sect1>

    <sect1>Correo electrónico

      <sect2>Mutt 
<p>

      <quote> Mutt  es un programa  cliente de correo  electrónico, lo
      que en  inglés se denomina  un MUA  (Mail User Agent,  agente de
      correo del  usuario). Es un programa  &quot;de consola&quot;, lo
      que  significa  que no  necesita  un  entorno de  ventanas  para
      ejecutarse. Al igual que  otros programas basados en pulsasiones
      de  teclas,  Mutt  resulta  ser  poco  intuitivo  al  principio.
      Afortunadamente,  se encuentra  traducido  al  castellano y  eso
      ayuda bastante. </quote>

      <quote> Vamos a usar mutt  para familirizarnos un poco él, verán
      que es  simple. Abrimos  una ventana de  emulador de  terminal y
      ejecutan el comando <tt/mutt/. </quote>

      <code>
      $ mutt
      </code>

      <quote> Si nos fijamos en la  primera línea de la pantalla vemos
      que  aparecen listadas  una  serie de  teclas  con sus  acciones
      asociadas, <tt/q:Salir/, para salir, <tt/d:Sup/ para suprimir un
      mensaje, etc. Vemos un ejemplo de  uso para hacernos una idea de
      las funciones básicas. </quote>

      <quote> El  que se haya fijado  en las dos últimas  líneas habrá
      visto que aparece lo siguiente: </quote>

      <code>
---Mutt: (ningún buzón) [Msgs:0]---(threads/date)-----------------------(all)---
/var/spool/mail/miguev: No existe el fichero o el directorio (errno = 2)
      </code>

      <quote>  Esto significa  que mutt  está buscando  el correo  del
      usuario  en  <tt>/var/spool/mail/miguev</tt>  (en  el  caso  del
      usuario miguev).  No se asusten.  Lo que  pasa es que  el correo
      está en esa carpeta pero no en el terminal donde están sentados,
      sino en  el servidor de  correo. Para  poder usar el  correo con
      Mutt hay que entrar primero en el servidor, lo que podemos hacer
      rápidamente  con  lo que  ya  sabemos  de  SSH. Entramos  en  el
      servidor y ejecutamos mutt allí: </quote>

      <code>
      $ ssh euler.fmat.ull.es
      miguev@10.0.1.2's password: 
      </code>

      <quote> Una vez  dentro del servidor podemos ya  ejecutar mutt y
      utilizar  el correo  directamente  desde el  servidor. Esto  que
      parece  inútil  tiene  su  utilidad. Imagina  que  estás  en  un
      ordenador en cualquier  lugar del mundo (con  acceso a internet)
      y  quieres  leer tu  correo  en  la  facultad, pero  no  quieres
      bajártelo. Utilizas un programa cliente de SSH para entrar en el
      servidor  y desde  dentro usas  el  correo como  si lo  tuvieras
      delante, aunque estés dentro del servidor. El mayor problema que
      esto  presenta  es  la  lentitud del  protocolo  SSH  cuando  la
      conexión es a través de un módem de línea telefónica. </quote>

      <quote> Ejecutamos el  comando <tt/mutt/ y vemos  en el terminal
      un programa casi todas las líneas vacías, salvo la primera y las
      dos últimas.  Probablemente en el  momento de abrir  mutt por
      primera vez  no veamos  nada interestante,  pero aquí  tienen un
      ejemplo de una lista de mensajes vista desde mutt. </quote>

      <code>
q:Salir  d:Sup.  u:Recuperar  s:Guardar  m:Nuevo  r:Responder  g:Grupo  ?:Ayuda
  43     Oct 27 Teresa Gonzalez (   0)  *>Re: [l-gulic] CILA LLENO
  44     Oct 27 Lucas Gonzalez  (   0)   >cvs
  45     Oct 27 Miguel Ángel Vi (   0) Bienvenido al calendario de la Universida
  46     Oct 28 Teresa Gonzalez (   0) Re: [l-gulic] Cambios en el CVS de CILA
  47     Oct 28 Pedro Gonzalez  (   0)  *>
  48     Oct 28 Carlos de la Cr (   0) La pu~etera introduccion :-)
  49     Oct 28 carlos de       (   0) maldito texto sobre java
  50     Oct 28 frodo@fmat.ull. (   0) MUY IMPORTANTE!!
  51     Oct 28 frodo@fmat.ull. (   0) ahora te llega?
  52     Oct 28 frodo@fmat.ull. (   0) ¡como no te llegue! ..grrr
  53     Oct 28 Administrador d (   0) Re: instala esto










---Mutt: /var/spool/mail/miguev [Msgs:53 425K]---(threads/date)---------(end)---

      </code>

<quote> Vamos a enviar un email a  alguien que esté con nosotros en el
aula, de esa forma cada uno  enviamos un correo y recibimos otro. Para
ello pulsamos  la tecla <tt/m/ y  veremos como en la  última línea nos
pregunta por el destinatario  del mensaje (<tt/To:/>. Introducimos ahí
la dirección de email a la que enviaremos el mensaje: </quote>

<code>
To: frodo@fmat.ull.es
</code>

<quote> Seguidamante  mutt nos  preguntará por  el asunto  del mensaje
(<tt/Subject:/). Es importante poner un asunto al mensaje, para que el
destinatario  pueda tener  una idea  de qué  es ese  mensaje antes  de
abrirlo.  En  un  tiempo  en  que el  contagio  de  virus  por  correo
eletrónico es preocupantemente frecuente,  resulta muy molesto recibir
un mensaje de email sin asunto. </quote>

<code>
Subject: Hola pringao :-P
</code>

<quote> Una  vez que  mutt ya  sabe el destinatario  del mensaje  y el
asunto,  ejecuta el  editor que  tengamos  definido en  el fichero  de
configuración <tt>~/.muttrc</tt>. Editamos el  mensaje que queramos y
salimos del  editor <bf/guardando el mensaje/,  importante esto último
ya que si salimos del editor  sin guardar el mensaje mutt cancelará el
envío. Una vez que salimos del  editor mutt está preparado para enviar
el mensaje, pero nos ofrece la  posibilidad de hacer aún varias cosas.
</quote>

<code>
y:Mandar  q:Abortar  t:To  c:CC  s:Subj  a:Adjuntar archivo  d:Descrip  ?:Ayuda
    From: Miguel Ángel Vilela <miguev@fmat.ull.es>
      To: frodo@fmat.ull.es
      Cc:
     Bcc:
 Subject: Hola pringao
Reply-To: Miguel Ángel Vilela <miguev@fmat.ull.es>
     Fcc:
     Mix: <no chain defined>
     PGP: En claro

-- Archivos adjuntos
- I     1 /tmp/mutt-euler-19795-2          [text/plain, 8bit, iso-8859-1, 0,1K] 








-- Mutt: Crear mensaje

</code>

<quote> Como podemos  apreciar en el ejemplo,  tenemos varias opciones
con  sus  teclas  asociadas  en  la primera  línea.  Para  cambiar  el
destinatario  pulsaríamos  <tt/t/, para  enviar  una  copia a  alguien
pulsaríamos  <tt/c/,  para  editar  el mensaje  de  nuevo  pulsaríamos
<tt/e/, etc. Para enviar el mensaje pulsamos <tt/y/. Entonces mutt nos
devolverá a  la primera pantalla,  pero mostrando en la  primera línea
información acerca del envío del mensaje. Debería aparecer</quote>

<code>
Mensaje enviado.
</code>

<quote> El resto del manejo  básico de <tt/mutt/ es bastante intuitivo
y  no   presenta  dificultades.  Si  en   cualquier  momento  deseamos
información  más  detallada  hacerca   de  las  opciones  disponibles,
pulsamos <tt/?/. </quote>

<code>
i:Salir  -:PágAnt  <Space>:PróxPág  ?:Ayuda 
^B          M |urlview\n           call urlview to extract URLs out of a message
^D          delete-thread          suprimir todos los mensajes en este hilo
^E          edit-type              editar el tipo de archivo adjunto
^F          forget-passphrase      borrar contraseña PGP de la memoria
<Tab>       next-new               saltar al próximo mensaje nuevo
<Return>    display-message        mostrar el mensaje
^K          extract-keys           extraer claves PGP públicas 
^N          next-thread            saltar al próximo hilo
^P          previous-thread        saltar al hilo anterior
^R          read-thread            marcar el hilo actual como leído
^T          untag-pattern          quitar marca de los mensajes que coincidan   +                                  con un patrón
^U          undelete-thread        restaurar todos los mensajes del hilo
<Esc><Tab>  previous-new           saltar al mensaje nuevo anterior
<Esc>C      decode-copy            crear copia decodificada (text/plain)
<Esc>V      collapse-all           colapsar/expander todos los hilos
<Esc>b      M /~b                  search in message bodies
<Esc>c      change-folder-readonly abrir otro buzón en modo de sólo lectura
<Esc>d      delete-subthread       suprimir todos los mensajes en este subhilo
<Esc>e      resend-message         usar el mensaje actual como base para uno
+                                  nuevo
Ayuda para index                                                       -- (15%) 

</code>

      </sect2>

      <sect2>Kmail 
<p>

<quote> Kmail es el programa cliente de correo para KDE, fácil de usar
y a la vez muy versátil y  configurable. Dada su facilidad de manejo y
la premura  de tiempo en  el curso  actual, no entraremos  en detalles
sobre su manejo y configuración. Sólo les animaremos a que sean osados
y exploren libremente sus opciones de configuración. </quote>


      </sect2>

    </sect1>

  </sect>

